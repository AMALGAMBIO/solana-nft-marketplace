name: Kubernetes deployment

on:
  push:
    branches: [dev, main]

jobs:
  build:
    name: Building and Pushing Image
    runs-on: self-hosted

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Frontend to Amazon ECR
        id: build-frontend-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}

        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          app=frontend
          git_branch=${GITHUB_REF##*/}
          solana_endpoint="https://holaplex-main-9e4a.mainnet.rpcpool.com"

          #if [ $git_branch == 'main' ];then
          #  graphql_endpoint="https://graph.holaplex.com/v1"
            node_env=production
          # else
            graphql_endpoint="https://graph.dev.holaplex.tools/v1/graphql"
          #  node_env=development
          #fi
          image_tag="$ECR_REGISTRY/$ECR_REPOSITORY:$git_branch-$git_hash"
          #build
          docker build -t $image_tag  \
          --build-arg GRAPHQL_URL=${graphql_endpoint} \
          --build-arg SOLANA_ENDPOINT=${solana_endpoint} \
          --build-arg NODE_ENV=$node_env \
          --build-arg MARKETPLACE_SUBDOMAIN=haus \
          .
          echo "Pushing image to ECR..."
          docker push $image_tag
          echo "::set-output name=image::$image_tag"

      - name: Triggering deployment manifest update in kubes repository (Dev)
        if: github.ref == 'refs/heads/dev'
        uses: actions/github-script@v6
        env:
          BRANCH: ${{ github.ref_name }}
        with:
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'holaplex',
              repo: 'kubes',
              workflow_id: 'nm.yaml',
              ref: process.env.BRANCH
            });

      - name: Triggering deployment manifest update in kubes repository (prod)
        if: github.ref == 'refs/heads/main'
        uses: actions/github-script@v6
        env:
          BRANCH: ${{ github.ref_name }}
        with:
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'holaplex',
              repo: 'kubes',
              workflow_id: 'nm.yaml',
              ref: process.env.BRANCH
            })

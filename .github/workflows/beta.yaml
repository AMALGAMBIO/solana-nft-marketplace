name: Build, push and Deploy Beta

on:
  push:
    branches: [ beta ]

  workflow_dispatch:

jobs:
  build:
    name: Building and Pushing Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Frontend to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ github.event.repository.name }}
          BUGSNAG_API_KEY: ${{ secrets.BUGSNAG_API_KEY }}
          HOLAINDEXER_URL_PROD: ${{ secrets.HOLAINDEXER_URL_PROD }}
          HOLAINDEXER_URL_DEV: ${{ secrets.HOLAINDEXER_URL_DEV }}
          HOLAINDEXER_URL_TEST: ${{ secrets.HOLAINDEXER_URL_TEST }}
          SOL_ENDPOINT: ${{ secrets.BETA_SOL_ENDPOINT }}

        run: |
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          app=frontend
          git_branch=${GITHUB_REF##*/}
          solana_endpoint="$SOL_ENDPOINT"
          image_tag="$ECR_REGISTRY/$ECR_REPOSITORY:$git_branch-$git_hash"
          
          graphql_endpoint="$HOLAINDEXER_URL_PROD"
          
          #build it
          docker build -t $image_tag  \
          --build-arg GRAPHQL_URL=${graphql_endpoint} \
          --build-arg SOLANA_ENDPOINT=${solana_endpoint} \
          --build-arg AUCTION_HOUSE_ADDRESS=8JfAyq7iGvEEsJ1SRzFHpxSAcjt9nGD7VgjeB56vGPuK \
          --build-arg BUGSNAG_API_KEY=${BUGSNAG_API_KEY} \
          --build-arg NODE_ENV=$node_env \
          --build-arg MARKETPLACE_SUBDOMAIN=haus \
          .
          echo "Pushing image to ECR..."
          docker push $image_tag
          echo "::set-output name=image::$image_tag"

      - name: Triggering deployment manifest update in kubes repository (Beta)
        if: github.ref == 'refs/heads/beta'
        uses: actions/github-script@v6
        env:
          BRANCH: ${{ github.ref_name }}
        with:
          github-token: ${{ secrets.ACTIONS_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'motleylabs',
              repo: 'kubes',
              workflow_id: 'nightmarket.yaml',
              ref: process.env.BRANCH
            });

#import "./fragments/profile.graphql"
#import "./fragments/nft.graphql"
#import "./fragments/listing.graphql"

query WalletProfileQuery($address: PublicKey!, $auctionHouse: String!) @cached(ttl: 300) {
  wallet(address: $address) {
    address
    displayName @client
    shortAddress @client
    previewImage @client
    profile {
      ...ProfileInfo
    }
  }
  auctionHouse(address: $auctionHouse) {
    address
    sellerFeeBasisPoints
    treasuryMint
    authority
    auctionHouseFeeAccount
    auctionHouseTreasury
    rewardCenter {
      address
      tokenMint
      sellerRewardPayoutBasisPoints
      payoutNumeral
      mathematicalOperand
    }
  }
}

query WalletProfileClientQuery($address: PublicKey!, $rewardCenter: PublicKey!) @cached(ttl: 120) {
  wallet(address: $address) {
    address
    totalRewards(rewardCenter: $rewardCenter)
    compactOwnedCount @client
    nftCounts {
      owned
      listed
    }
    collectedCollections {
      collection {
        name
        image(width: 100)
        id
        trends {
          floor1d
          compactFloor1d @client
        }
      }
      nftsOwned
      estimatedValue
    }
  }
}

query FollowingProfileQuery($from: PublicKey!, $to: PublicKey!) {
  connections(from: [$from], to: [$to], limit: 1, offset: 0) {
    to {
      address
      profile {
        ...ProfileInfo
      }
    }
  }
}

query CollectedNFTsQuery(
  $address: PublicKey!
  $collections: [String!]
  $auctionHouse: String
  $limit: Int!
  $offset: Int!
) {
  wallet(address: $address) {
    address
    nfts(collections: $collections, auctionHouse: $auctionHouse, limit: $limit, offset: $offset) {
      ...NftInfo
    }
  }
}

query ProfileActivitiesQuery(
  $address: PublicKey!
  $eventTypes: [ActivityType!]
  $limit: Int = 25
  $offset: Int = 0
) @cached(ttl: 120) {
  wallet(address: $address) {
    address
    activities(eventTypes: $eventTypes, limit: $limit, offset: $offset) {
      id
      metadata
      price
      createdAt
      timeSince @client
      marketplaceProgramAddress
      solPrice @client
      nftMarketplace @client {
        name
        logo
      }
      activityType
      auctionHouse {
        address
        treasuryMint
      }
      nft {
        address
        name
        mintAddress
        image(width: 100)
      }
    }
  }
}

query ProfileOffersQuery(
  $address: PublicKey!
  $offerType: OfferType
  $limit: Int = 25
  $offset: Int = 0
) {
  wallet(address: $address) {
    address
    offers(offerType: $offerType, limit: $limit, offset: $offset) {
      id
      metadata
      price
      createdAt
      timeSince @client
      marketplaceProgramAddress
      solPrice @client
      buyer
      nftMarketplace @client {
        name
        logo
      }
      auctionHouse {
        address
        treasuryMint
      }
      nft {
        address
        name
        mintAddress
        creators {
          address
        }
        listings {
          ...ListingInfo
        }
        image(width: 100)
        moonrankCollection {
          id
        }
        owner {
          address
          associatedTokenAccountAddress
        }
      }
      buyerWallet {
        address
        twitterHandle
        previewImage @client
        displayName @client
        profile {
          ...ProfileInfo
        }
      }
    }
  }
}

query ProfileInfoByAddressQuery($address: PublicKey!) {
  wallet(address: $address) @cached(ttl: 300) {
    address
    previewImage @client
    displayName @client
    profile {
      ...ProfileInfo
    }
  }
}

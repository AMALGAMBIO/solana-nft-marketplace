#import "./fragments/profile.graphql"
#import "./fragments/nft.graphql"

query CollectionQuery($address: String!) {
  collection(address: $address) {
    nft {
      address
      mintAddress
      name
      image
      description
      creators {
        address
        displayName @client
        previewImage @client
        profile {
          ...ProfileInfo
        }
        metadataAddress
        share
        verified
        position
      }
    }
    nftCount
    floorPrice
    totalVolume @client
    listedCount @client
    holderCount @client
  }
}

query CollectionAttributeGroupsQuery($address: String!) {
  collection(address: $address) {
    attributeGroups {
      name
      variants {
        name
        count
      }
    }
  }
}

query CollectionNFTsQuery(
  $collection: PublicKey!
  $limit: Int!
  $offset: Int!
  $listed: Boolean
  $attributes: [AttributeFilter!]
) {
  nfts(
    collections: [$collection]
    limit: $limit
    offset: $offset
    listed: $listed
    attributes: $attributes
  ) {
    ...NftInfo
  }
}

query CollectionActivitiesQuery(
  $address: String!
  $eventTypes: [String!]
  $limit: Int = 25
  $offset: Int = 0
) {
  collection(address: $address) {
    activities(eventTypes: $eventTypes, limit: $limit, offset: $offset) {
      id
      metadata
      price
      createdAt
      marketplaceProgramAddress
      solPrice @client
      wallets {
        address
        twitterHandle
        previewImage @client
        displayName @client
        profile {
          ...ProfileInfo
        }
      }
      activityType
      auctionHouse {
        address
        treasuryMint
      }
      nft {
        address
        name
        mintAddress
        image(width: 100)
      }
    }
  }
}

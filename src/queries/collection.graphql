#import "./fragments/profile.graphql"
#import "./fragments/nft.graphql"
#import "./fragments/listing.graphql"

query CollectionQuery($id: String!) @cached(ttl: 300) {
  collection(id: $id) {
    id
    verifiedCollectionAddress
    name
    description
    image
    compactPieces @client
    pieces
  }
}

query CollectionQueryClient($id: String!, $startTime: DateTimeUtc!, $endTime: DateTimeUtc!)
@cached(ttl: 300) {
  collection(id: $id) {
    id
    holderCount
    marketCap @client
    pieces
    trends {
      compactFloor1d @client
      compactVolume30d @client
      compactListed1d @client
      floor1d
      volume30d
      listed1d
    }
    timeseries(startTime: $startTime, endTime: $endTime) {
      floorPrice {
        timestamp
        value
        amount @client
      }
      listedCount {
        timestamp
        value
        amount @client
      }
    }
  }
}

query CollectionAttributeGroupsQuery($id: String!) @cached(ttl: 300) {
  collection(id: $id) {
    id
    attributeGroups {
      name
      variants {
        name
        count
      }
    }
  }
}

query CollectionNFTsQuery(
  $id: String!
  $order: OrderDirection
  $sortBy: NftSort
  $attributes: [AttributeFilter!]
  $auctionHouse: String!
  $limit: Int = 24
  $offset: Int = 0
) {
  collection(id: $id) {
    id
    nfts(
      order: $order
      sortBy: $sortBy
      attributes: $attributes
      limit: $limit
      offset: $offset
      auctionHouse: $auctionHouse
    ) {
      ...NftListingInfo
    }
  }
}

query CollectionActivitiesQuery(
  $id: String!
  $eventTypes: [ActivityType!]
  $limit: Int = 25
  $offset: Int = 0
) @cached(ttl: 180) {
  collection(id: $id) {
    id
    activities(eventTypes: $eventTypes, limit: $limit, offset: $offset) {
      id
      metadata
      price
      solPrice @client
      createdAt
      timeSince @client
      marketplaceProgramAddress
      nftMarketplace @client {
        name
        link
        logo
      }
      primaryWallet @client {
        address
        twitterHandle
        previewImage @client
        displayName @client
        profile {
          ...ProfileInfo
        }
      }
      wallets {
        address
        twitterHandle
        previewImage @client
        displayName @client
        profile {
          ...ProfileInfo
        }
      }
      activityType
      auctionHouse {
        address
        treasuryMint
      }
      nft {
        address
        name
        mintAddress
        image(width: 100)
      }
    }
  }
}

query CollectionNftPreviewsQuery($id: String!, $auctionHouse: String) @cached(ttl: 300) {
  collection(id: $id) {
    id
    nfts(limit: 7, offset: 0, sortBy: LISTED_AT, order: DESC, auctionHouse: $auctionHouse) {
      name
      mintAddress
      image(width: 100)
      listings {
        id
        createdAt
        price
        solPrice @client
      }
    }
  }
}

query CollectionAnalyticsFloorPriceQuery(
  $id: String!
  $startTime: DateTimeUtc!
  $endTime: DateTimeUtc!
) @cached(ttl: 300) {
  collection(id: $id) {
    id
    timeseries(startTime: $startTime, endTime: $endTime) {
      floorPrice {
        timestamp
        value
        amount @client
      }
    }
  }
}

query CollectionAnalyticsListedCountQuery(
  $id: String!
  $startTime: DateTimeUtc!
  $endTime: DateTimeUtc!
) @cached(ttl: 300) {
  collection(id: $id) {
    id
    timeseries(startTime: $startTime, endTime: $endTime) {
      listedCount {
        timestamp
        value
        amount @client
      }
    }
  }
}

query CollectionAnalyticsHolderCountQuery(
  $id: String!
  $startTime: DateTimeUtc!
  $endTime: DateTimeUtc!
) @cached(ttl: 300) {
  collection(id: $id) {
    id
    timeseries(startTime: $startTime, endTime: $endTime) {
      ownersCount {
        timestamp
        value
        amount @client
      }
    }
  }
}
